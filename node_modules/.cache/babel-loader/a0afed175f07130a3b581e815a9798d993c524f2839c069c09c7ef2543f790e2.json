{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bubba\\\\WebstormProjects\\\\110finalproject\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import react from 'react';\n// import { io } from 'socket.io-client';\n// import logo from './logo.svg';\n// import './App.css';\n\n// import Init from './initialScreen.js';\n// import Chat from './Chat.js';\n\n// class App extends react.Component {\n//   constructor(props){\n//     super(props);\n\n//     this.socket = io('http://localhost:3000');\n//     this.state = {\n//       username: '',\n//       room: '',\n//       screen: \"init\",\n//     }\n//   }\n\n//   click = (room, message) => {\n//     console.log(room);\n//     this.socket.emit('join', {room: room, username: message});\n//     this.setState({room: room, username: message, screen: \"chat\"});\n//   }\n\n//   render(){\n//   return (\n//     <div className=\"App\">\n//       {this.state.screen === \"init\" ? <Init click={this.click}></Init> : <Chat socket={this.socket}></Chat>}\n//     </div>\n//   );\n//   }\n// }\n\n// export default App;\n\nimport React, { useState, useEffect, useLayoutEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { getDesignTokens } from \"./themes/theme\";\nimport { IconButton } from \"@mui/material\";\nimport BedtimeIcon from \"@mui/icons-material/Bedtime\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport ScreenHandler from \"./ScreenHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet reached = false;\nlet adjusting = 0;\nfunction App() {\n  _s();\n  const [selectedScreen, setSelectedScreen] = React.useState(0);\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const [mode, setMode] = React.useState(\"light\");\n  React.useEffect(() => {\n    if (localStorage.getItem(\"mode\") !== null) setMode(localStorage.getItem(\"mode\"));else setMode(prefersDarkMode ? \"dark\" : \"light\");\n  }, [prefersDarkMode]);\n  React.useEffect(() => {\n    localStorage.setItem(\"mode\", mode);\n  }, [mode]);\n  const colorMode = React.useMemo(() => ({\n    // The dark mode switch would invoke this method\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === \"light\" ? \"dark\" : \"light\");\n      // localStorage.setItem('mode', mode)\n    }\n  }), []);\n\n  // Update the theme only if the mode changes\n  const theme = React.useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n  const ColorModeContext = /*#__PURE__*/React.createContext({\n    toggleColorMode: () => {\n      // This is intentional\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: colorMode,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScreenHandler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        style: {\n          zIndex: 5,\n          color: \"black\",\n          position: \"absolute\",\n          top: 10,\n          right: 10\n        },\n        onClick: colorMode.toggleColorMode,\n        \"aria-label\": \"delete\",\n        children: mode === \"light\" ? /*#__PURE__*/_jsxDEV(BedtimeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(LightModeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ScHZ1wSuo3UkZxaZPfSOVleBlrE=\", false, function () {\n  return [useMediaQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useLayoutEffect","useRef","createTheme","ThemeProvider","CssBaseline","useMediaQuery","getDesignTokens","IconButton","BedtimeIcon","LightModeIcon","ScreenHandler","jsxDEV","_jsxDEV","reached","adjusting","App","_s","selectedScreen","setSelectedScreen","prefersDarkMode","mode","setMode","localStorage","getItem","setItem","colorMode","useMemo","toggleColorMode","prevMode","theme","ColorModeContext","createContext","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","style","zIndex","color","position","top","right","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bubba/WebstormProjects/110finalproject/front/src/App.js"],"sourcesContent":["// import react from 'react';\r\n// import { io } from 'socket.io-client';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\n// import Init from './initialScreen.js';\r\n// import Chat from './Chat.js';\r\n\r\n// class App extends react.Component {\r\n//   constructor(props){\r\n//     super(props);\r\n\r\n//     this.socket = io('http://localhost:3000');\r\n//     this.state = {\r\n//       username: '',\r\n//       room: '',\r\n//       screen: \"init\",\r\n//     }\r\n//   }\r\n\r\n//   click = (room, message) => {\r\n//     console.log(room);\r\n//     this.socket.emit('join', {room: room, username: message});\r\n//     this.setState({room: room, username: message, screen: \"chat\"});\r\n//   }\r\n\r\n//   render(){\r\n//   return (\r\n//     <div className=\"App\">\r\n//       {this.state.screen === \"init\" ? <Init click={this.click}></Init> : <Chat socket={this.socket}></Chat>}\r\n//     </div>\r\n//   );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n\r\nimport React, { useState, useEffect, useLayoutEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport { getDesignTokens } from \"./themes/theme\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport BedtimeIcon from \"@mui/icons-material/Bedtime\";\r\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\r\nimport \"@fontsource/roboto/300.css\";\r\nimport \"@fontsource/roboto/400.css\";\r\nimport \"@fontsource/roboto/500.css\";\r\nimport \"@fontsource/roboto/700.css\";\r\n\r\nimport ScreenHandler from \"./ScreenHandler\";\r\n\r\nlet reached = false;\r\nlet adjusting = 0;\r\n\r\nfunction App() {\r\n  const [selectedScreen, setSelectedScreen] = React.useState(0);\r\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n  const [mode, setMode] = React.useState(\"light\");\r\n\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem(\"mode\") !== null)\r\n      setMode(localStorage.getItem(\"mode\"));\r\n    else setMode(prefersDarkMode ? \"dark\" : \"light\");\r\n  }, [prefersDarkMode]);\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(\"mode\", mode);\r\n  }, [mode]);\r\n\r\n  const colorMode = React.useMemo(\r\n    () => ({\r\n      // The dark mode switch would invoke this method\r\n      toggleColorMode: () => {\r\n        setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\r\n        // localStorage.setItem('mode', mode)\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  // Update the theme only if the mode changes\r\n  const theme = React.useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\r\n  const ColorModeContext = React.createContext({\r\n    toggleColorMode: () => {\r\n      // This is intentional\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ColorModeContext.Provider value={colorMode}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        \r\n        <ScreenHandler />\r\n        <IconButton\r\n          style={{\r\n            zIndex: 5,\r\n            color: \"black\",\r\n            position: \"absolute\",\r\n            top: 10,\r\n            right: 10,\r\n          }}\r\n          onClick={colorMode.toggleColorMode}\r\n          aria-label=\"delete\"\r\n        >\r\n          {mode === \"light\" ? <BedtimeIcon /> : <LightModeIcon />}\r\n        </IconButton>\r\n      </ThemeProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}