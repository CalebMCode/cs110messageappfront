{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bubba\\\\WebstormProjects\\\\110finalproject\\\\front\\\\src\\\\Screens\\\\Auth.js\";\nimport react, { useState, useEffect } from \"react\";\nimport Form from \"../Components/form.js\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Auth extends react.Component {\n  constructor(props) {\n    super(props);\n    this.fetchImage = async () => {\n      const res = await fetch(this.props.server_url + \"/api/auth/getQR\", {\n        method: \"GET\"\n      }).then(response => {\n        console.log(response);\n        return response.json();\n      });\n    };\n    this.closeForm = () => {\n      this.setState({\n        showForm: false\n      });\n    };\n    this.login = data => {\n      // DONE: write codes to login\n      console.log(data);\n      fetch(this.props.server_url + \"/api/auth/login\", {\n        method: \"POST\",\n        mode: 'cors',\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header above.\n      }).then(res => {\n        res.json().then(data => {\n          if (data.msg === \"Logged in\") {\n            // this.props.changeUser(data.username);\n            this.props.changeScreen(\"lobby\");\n          } else {\n            alert(data.msg);\n          }\n        });\n      });\n    };\n    this.register = data => {\n      // DONE: write codes to register\n      console.log(data);\n      // let r = JSON.stringify(data);\n      fetch(this.props.server_url + \"/api/auth/signup\", {\n        method: \"POST\",\n        mode: 'cors',\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header above.\n      }).then(res => {\n        res.clone().json().then(data => {\n          alert(data.username);\n        }).catch(() => {\n          res.text().then(textData => {\n            alert(textData);\n          });\n        });\n      });\n    };\n    this.state = {\n      showForm: false,\n      selectedForm: undefined,\n      qrCode: this.fetchImage\n    };\n  }\n  render() {\n    let display = null;\n    if (this.state.showForm) {\n      let fields = [];\n      if (this.state.selectedForm === \"login\") {\n        fields = ['username', 'password', '2FA Token'];\n        display = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            fields: fields,\n            close: this.closeForm,\n            type: \"login\",\n            submit: this.login\n          }, this.state.selectedForm, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.qrCode,\n            alt: \"QR Code for authentification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this);\n      } else if (this.state.selectedForm === \"register\") {\n        fields = ['username', 'password', 'name'];\n        display = /*#__PURE__*/_jsxDEV(Form, {\n          fields: fields,\n          close: this.closeForm,\n          type: \"register\",\n          submit: this.register\n        }, this.state.selectedForm, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 27\n        }, this);\n      }\n    } else {\n      display = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.setState({\n            showForm: true,\n            selectedForm: \"login\"\n          }),\n          children: \" Login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.setState({\n            showForm: true,\n            selectedForm: \"register\"\n          }),\n          children: \" Register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Welcome to our website! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), display]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Auth;","map":{"version":3,"names":["react","useState","useEffect","Form","Button","jsxDEV","_jsxDEV","Auth","Component","constructor","props","fetchImage","res","fetch","server_url","method","then","response","console","log","json","closeForm","setState","showForm","login","data","mode","credentials","headers","body","JSON","stringify","msg","changeScreen","alert","register","clone","username","catch","text","textData","state","selectedForm","undefined","qrCode","render","display","fields","children","close","type","submit","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick"],"sources":["C:/Users/bubba/WebstormProjects/110finalproject/front/src/Screens/Auth.js"],"sourcesContent":["import react, {useState, useEffect} from \"react\";\r\nimport Form from \"../Components/form.js\";\r\nimport { Button } from \"@mui/material\";\r\n\r\n\r\nclass Auth extends react.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showForm: false,\r\n            selectedForm: undefined,\r\n            qrCode: this.fetchImage\r\n        }\r\n\r\n    }\r\n    fetchImage = async () =>{\r\n        const res = await fetch(this.props.server_url+\"/api/auth/getQR\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(response => {\r\n                console.log(response);\r\n                return response.json();\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    closeForm = () => {\r\n        this.setState({showForm: false});\r\n    }\r\n\r\n    login = (data) => {\r\n        // DONE: write codes to login\r\n        console.log(data);\r\n        fetch(this.props.server_url+\"/api/auth/login\", {\r\n            method: \"POST\",\r\n            mode: 'cors',\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header above.\r\n        }).then((res) => {\r\n            res.json().then((data) => {\r\n                if (data.msg === \"Logged in\"){\r\n                    // this.props.changeUser(data.username);\r\n                    this.props.changeScreen(\"lobby\");\r\n                }else{\r\n                    alert(data.msg);\r\n                }\r\n            });\r\n        });    \r\n    }\r\n\r\n    register = (data) => {\r\n        // DONE: write codes to register\r\n        console.log(data);\r\n        // let r = JSON.stringify(data);\r\n        fetch(this.props.server_url+\"/api/auth/signup\", {\r\n            method: \"POST\",\r\n            mode: 'cors',\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header above.\r\n        }).then((res) => {\r\n            res.clone().json().then((data) => {\r\n                alert(data.username);\r\n            }).catch(()=>{\r\n                res.text().then((textData) => {\r\n                alert(textData);\r\n                })\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    render(){\r\n        let display = null;\r\n        if (this.state.showForm){\r\n            let fields = [];\r\n            if (this.state.selectedForm === \"login\"){\r\n                fields = ['username', 'password', '2FA Token'];\r\n                display =\r\n                    <div><Form fields={fields} close={this.closeForm} type=\"login\" submit={this.login} key={this.state.selectedForm}/>\r\n                    <img src = {this.state.qrCode} alt=\"QR Code for authentification\"/></div>;\r\n            }\r\n            else if (this.state.selectedForm === \"register\"){\r\n                fields = [ 'username', 'password', 'name'];\r\n                display = <Form fields={fields} close={this.closeForm} type=\"register\" submit={this.register} key={this.state.selectedForm}/>;\r\n            }   \r\n        }\r\n        else{\r\n            display = <div>\r\n                <Button onClick={() => this.setState({showForm: true, selectedForm:\"login\"})}> Login </Button>\r\n                <Button onClick={() => this.setState({showForm: true, selectedForm: \"register\"})}> Register </Button>\r\n                </div>              ;\r\n        }\r\n        return(\r\n            <div>\r\n                <h1> Welcome to our website! </h1>\r\n                {display}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}