{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bubba\\\\WebstormProjects\\\\110finalproject\\\\front\\\\src\\\\Screens\\\\Lobby.js\";\nimport react from \"react\";\nimport { Button } from \"@mui/material\";\nimport { configure } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Lobby extends react.Component {\n  constructor(props) {\n    super(props);\n    this.logout = () => {\n      fetch(this.props.server_url + '/api/auth/logout', {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        res.json().then(data => {\n          if (data.msg == \"Logged out\") {\n            // this.props.changeUser('');\n            this.props.changeScreen(\"auth\");\n          } else {\n            alert(data.msg);\n          }\n        });\n      });\n    };\n    this.create = roomId => {\n      fetch(this.props.server_url + '/api/rooms/create', {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          roomId\n        })\n      }).then(res => {\n        console.log(\"hi\");\n        res.json().then(data => {\n          console.log(\"hi\");\n          if (data.msg == \"success\") {\n            this.setState({\n              rooms: data.rooms\n            });\n          } else {\n            alert(data.msg);\n          }\n        });\n      });\n    };\n    this.join = roomId => {\n      fetch(this.props.server_url + '/api/rooms/join', {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          roomId\n        })\n      }).then(res => {\n        res.json().then(data => {\n          if (data.msg == \"success\") {\n            this.setState({\n              rooms: data.rooms\n            });\n            // alert(data.room.name, data.user.username);                    \n          } else {\n            alert(data.msg);\n          }\n        });\n      });\n    };\n    this.enter = name => {\n      fetch(this.props.server_url + \"/api/rooms/enter\", {\n        method: \"POST\",\n        mode: 'cors',\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name\n        }) // body data type must match \"Content-Type\" header above.\n      }).then(res => {\n        res.json().then(data => {\n          if (data.msg === \"Chatroom entered\") {\n            console.log(this.props);\n            console.log(data.room);\n            this.props.changeRoom(data.room);\n            this.props.changeScreen(\"chatroom\");\n          } else {\n            alert(data.msg);\n          }\n        });\n      });\n      // alert(roomId);\n    };\n    this.state = {\n      rooms: undefined\n    };\n  }\n  componentDidMount() {\n    // TODO: write codes to fetch all rooms from server\n    fetch(this.props.server_url + '/api/rooms/all', {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      res.json().then(data => {\n        this.setState({\n          rooms: data\n        });\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"lobby\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.logout,\n          children: \" Logout \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), this.state.rooms ? this.state.rooms.map(room => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => this.enter(room),\n          children: room\n        }, \"roomKey\" + room, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 28\n        }, this);\n      }) : \"loading...\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          const roomId = e.target.roomId.value;\n          this.join(roomId);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"roomId\",\n          children: \"RoomId: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"roomId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          const roomId = e.target.roomId.value;\n          this.create(roomId);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"roomId\",\n          children: \"RoomId: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"roomId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Lobby;","map":{"version":3,"names":["react","Button","configure","jsxDEV","_jsxDEV","Lobby","Component","constructor","props","logout","fetch","server_url","method","credentials","headers","then","res","json","data","msg","changeScreen","alert","create","roomId","body","JSON","stringify","console","log","setState","rooms","join","enter","name","mode","room","changeRoom","state","undefined","componentDidMount","render","class","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","variant","onSubmit","e","preventDefault","target","value","for","type"],"sources":["C:/Users/bubba/WebstormProjects/110finalproject/front/src/Screens/Lobby.js"],"sourcesContent":["import react from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { configure } from \"@testing-library/react\";\r\n\r\nclass Lobby extends react.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            rooms: undefined,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // TODO: write codes to fetch all rooms from server\r\n        fetch(this.props.server_url + '/api/rooms/all', {\r\n            method: \"GET\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        }).then((res) => {\r\n            res.json().then((data) => {\r\n                this.setState({rooms:data})\r\n            })\r\n        });\r\n    }\r\n\r\n    logout = () => {\r\n        fetch(this.props.server_url + '/api/auth/logout', {\r\n            method: \"GET\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        }).then((res) => {\r\n            res.json().then((data) => {\r\n                if(data.msg == \"Logged out\"){\r\n                    // this.props.changeUser('');\r\n                    this.props.changeScreen(\"auth\");\r\n                }else{\r\n                    alert(data.msg);\r\n                }\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    create = (roomId) => {\r\n        fetch(this.props.server_url + '/api/rooms/create', {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ roomId })\r\n        }).then((res) => {\r\n            console.log(\"hi\");\r\n            res.json().then((data) => {\r\n                console.log(\"hi\");\r\n                if(data.msg == \"success\"){\r\n                    this.setState({rooms: data.rooms});\r\n                }else{\r\n                    alert(data.msg);\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    join = (roomId) => {\r\n        fetch(this.props.server_url + '/api/rooms/join', {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ roomId })\r\n        }).then((res) => {\r\n            res.json().then((data) => {\r\n                if(data.msg == \"success\"){\r\n                    this.setState({rooms: data.rooms});\r\n                    // alert(data.room.name, data.user.username);                    \r\n                }else{\r\n                    alert(data.msg);\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    enter = (name) => {\r\n        fetch(this.props.server_url+\"/api/rooms/enter\", {\r\n            method: \"POST\",\r\n            mode: 'cors',\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ name }) // body data type must match \"Content-Type\" header above.\r\n        }).then((res) => {\r\n            res.json().then((data) => {\r\n                if (data.msg === \"Chatroom entered\"){\r\n                    console.log(this.props);\r\n                    console.log(data.room);\r\n                    this.props.changeRoom(data.room);\r\n                    this.props.changeScreen(\"chatroom\");\r\n                }else{\r\n                    alert(data.msg);\r\n                }\r\n            });\r\n        }); \r\n        // alert(roomId);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div class=\"lobby\">\r\n                <h1>Lobby</h1>\r\n                <div>\r\n                    <Button onClick={this.logout}> Logout </Button>\r\n                </div>\r\n\r\n                {this.state.rooms ? this.state.rooms.map((room) => {\r\n                    return <Button variant=\"contained\" key={\"roomKey\"+room} onClick={() => this.enter(room)}>{room}</Button>\r\n                }) : \"loading...\"}\r\n                {/* write codes to join a new room using room id*/}\r\n                <form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    const roomId = e.target.roomId.value;\r\n                    this.join(roomId);\r\n                }}>\r\n                    <label for=\"roomId\">RoomId: </label>\r\n                    <input type=\"text\" name=\"roomId\"/>\r\n\r\n                    <button type=\"submit\">Join</button>\r\n                </form>\r\n                {/* write codes to enable user to create a new room*/}\r\n\r\n                <form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    const roomId = e.target.roomId.value;\r\n                    this.create(roomId);\r\n                }}>\r\n                    <label for=\"roomId\">RoomId: </label>\r\n                    <input type=\"text\" name=\"roomId\"/>\r\n\r\n                    <button type=\"submit\">Create</button>\r\n                </form>\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Lobby;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}