{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bubba\\\\WebstormProjects\\\\110finalproject\\\\front\\\\src\\\\ScreenHandler.js\";\nimport react from \"react\";\nimport Auth from './Screens/Auth.js';\nimport Lobby from \"./Screens/Lobby.js\";\nimport Chatroom from \"./Screens/Chatroom.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst server_url = \"http://localhost:3001\";\nclass ScreenHandler extends react.Component {\n  constructor(props) {\n    super(props);\n    this.changeScreen = screen => {\n      this.setState({\n        screen: screen\n      });\n    };\n    // changeUser = (username) => {\n    //     this.setState({username: username});\n    // }\n    this.changeRoom = room => {\n      this.setState({\n        room: room\n      });\n    };\n    this.state = {\n      screen: undefined,\n      // username: undefined,\n      room: undefined\n    };\n  }\n  componentDidMount() {\n    // checking if the user has active session\n    // if yes, then show lobby. if no, then show auth\n    fetch(server_url, {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      res.json().then(data => {\n        if (data.message === \"logged in\") {\n          this.setState({\n            screen: \"lobby\"\n          });\n        } else {\n          this.setState({\n            screen: \"auth\"\n          });\n        }\n      });\n    });\n  }\n  render() {\n    let display = \"loading...\";\n    if (this.state.screen == \"auth\") {\n      display = /*#__PURE__*/_jsxDEV(Auth, {\n        server_url: server_url,\n        changeScreen: this.changeScreen /*changeUser={this.changeUser}*/\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this);\n    } else if (this.state.screen == \"lobby\") {\n      display = /*#__PURE__*/_jsxDEV(Lobby, {\n        server_url: server_url,\n        changeScreen: this.changeScreen,\n        changeRoom: this.changeRoom /*changeUser={this.changeUser} */\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this);\n    } else if (this.state.screen == \"chatroom\") {\n      display = /*#__PURE__*/_jsxDEV(Chatroom, {\n        server_url: server_url,\n        changeScreen: this.changeScreen,\n        changeRoom: this.changeRoom /*username={this.state.username}*/,\n        room: this.state.room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ScreenHandler;","map":{"version":3,"names":["react","Auth","Lobby","Chatroom","jsxDEV","_jsxDEV","server_url","ScreenHandler","Component","constructor","props","changeScreen","screen","setState","changeRoom","room","state","undefined","componentDidMount","fetch","method","credentials","headers","then","res","json","data","message","render","display","fileName","_jsxFileName","lineNumber","columnNumber","children"],"sources":["C:/Users/bubba/WebstormProjects/110finalproject/front/src/ScreenHandler.js"],"sourcesContent":["import react from \"react\";\r\nimport Auth from './Screens/Auth.js';\r\nimport Lobby from \"./Screens/Lobby.js\";\r\nimport Chatroom from \"./Screens/Chatroom.js\";\r\n\r\nconst server_url = \"http://localhost:3001\";\r\n\r\n\r\nclass ScreenHandler extends react.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            screen: undefined,\r\n            // username: undefined,\r\n            room: undefined,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // checking if the user has active session\r\n        // if yes, then show lobby. if no, then show auth\r\n        fetch(server_url, {\r\n            method: \"GET\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        }).then((res) => {\r\n            res.json().then((data) => {\r\n                if (data.message === \"logged in\"){\r\n                    this.setState({screen: \"lobby\"});\r\n                }\r\n                else{\r\n                    this.setState({screen: \"auth\"});\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    changeScreen = (screen) => {\r\n        this.setState({screen: screen});\r\n    }\r\n\r\n    // changeUser = (username) => {\r\n    //     this.setState({username: username});\r\n    // }\r\n\r\n    changeRoom = (room) => {\r\n        this.setState({room: room});\r\n    }\r\n\r\n    render(){\r\n        let display = \"loading...\";\r\n        if (this.state.screen == \"auth\"){\r\n            display = <Auth server_url = {server_url} changeScreen={this.changeScreen} /*changeUser={this.changeUser}*/ />;\r\n        }\r\n        else if (this.state.screen == \"lobby\"){\r\n            display = <Lobby server_url = {server_url} changeScreen={this.changeScreen} changeRoom={this.changeRoom} /*changeUser={this.changeUser} */ />;\r\n        }\r\n        else if (this.state.screen == \"chatroom\"){\r\n            display = <Chatroom server_url = {server_url} changeScreen={this.changeScreen} changeRoom={this.changeRoom} /*username={this.state.username}*/ room={this.state.room} />;\r\n        }\r\n        return(\r\n            <div>\r\n                {display}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScreenHandler;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAG,uBAAuB;AAG1C,MAAMC,aAAa,SAASP,KAAK,CAACQ,SAAS;EACvCC,WAAWA,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IAAC,KA8BjBC,YAAY,GAAIC,MAAM,IAAK;MACvB,IAAI,CAACC,QAAQ,CAAC;QAACD,MAAM,EAAEA;MAAM,CAAC,CAAC;IACnC,CAAC;IAED;IACA;IACA;IAAA,KAEAE,UAAU,GAAIC,IAAI,IAAK;MACnB,IAAI,CAACF,QAAQ,CAAC;QAACE,IAAI,EAAEA;MAAI,CAAC,CAAC;IAC/B,CAAC;IAtCG,IAAI,CAACC,KAAK,GAAG;MACTJ,MAAM,EAAEK,SAAS;MACjB;MACAF,IAAI,EAAEE;IACV,CAAC;EACL;EAEAC,iBAAiBA,CAAA,EAAE;IACf;IACA;IACAC,KAAK,CAACb,UAAU,EAAE;MACdc,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACbA,GAAG,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAK;QACtB,IAAIA,IAAI,CAACC,OAAO,KAAK,WAAW,EAAC;UAC7B,IAAI,CAACd,QAAQ,CAAC;YAACD,MAAM,EAAE;UAAO,CAAC,CAAC;QACpC,CAAC,MACG;UACA,IAAI,CAACC,QAAQ,CAAC;YAACD,MAAM,EAAE;UAAM,CAAC,CAAC;QACnC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAcAgB,MAAMA,CAAA,EAAE;IACJ,IAAIC,OAAO,GAAG,YAAY;IAC1B,IAAI,IAAI,CAACb,KAAK,CAACJ,MAAM,IAAI,MAAM,EAAC;MAC5BiB,OAAO,gBAAGxB,OAAA,CAACJ,IAAI;QAACK,UAAU,EAAIA,UAAW;QAACK,YAAY,EAAE,IAAI,CAACA,YAAa,CAAC;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAAC;IAClH,CAAC,MACI,IAAI,IAAI,CAACjB,KAAK,CAACJ,MAAM,IAAI,OAAO,EAAC;MAClCiB,OAAO,gBAAGxB,OAAA,CAACH,KAAK;QAACI,UAAU,EAAIA,UAAW;QAACK,YAAY,EAAE,IAAI,CAACA,YAAa;QAACG,UAAU,EAAE,IAAI,CAACA,UAAW,CAAC;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CAAC;IACjJ,CAAC,MACI,IAAI,IAAI,CAACjB,KAAK,CAACJ,MAAM,IAAI,UAAU,EAAC;MACrCiB,OAAO,gBAAGxB,OAAA,CAACF,QAAQ;QAACG,UAAU,EAAIA,UAAW;QAACK,YAAY,EAAE,IAAI,CAACA,YAAa;QAACG,UAAU,EAAE,IAAI,CAACA,UAAW,CAAC;QAAmCC,IAAI,EAAE,IAAI,CAACC,KAAK,CAACD;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC5K;IACA,oBACI5B,OAAA;MAAA6B,QAAA,EACKL;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEd;AACJ;AAEA,eAAe1B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}