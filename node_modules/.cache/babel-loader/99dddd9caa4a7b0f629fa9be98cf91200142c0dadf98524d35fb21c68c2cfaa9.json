{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bubba\\\\WebstormProjects\\\\110finalproject\\\\front\\\\src\\\\Screens\\\\Auth.js\";\nimport react, { useState, useEffect } from \"react\";\nimport Form from \"../Components/form.js\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst qrcode = require('qrcode');\nclass Auth extends react.Component {\n  constructor(props) {\n    super(props);\n    this.fetchSecret = async () => {\n      const res = await fetch(this.props.server_url + \"/api/auth/getSecret\", {\n        method: \"GET\",\n        mode: 'cors',\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      }).then(response => {\n        let toSendBack = response.json();\n        console.log(toSendBack);\n        return response;\n      });\n    };\n    this.getImg = async data => {\n      qrcode.toDataURL(data.otpauth_url, function (err, dat) {\n        console.log(dat);\n        return dat;\n      });\n    };\n    this.closeForm = () => {\n      this.setState({\n        showForm: false\n      });\n    };\n    this.login = data => {\n      // DONE: write codes to login\n      console.log(data);\n      fetch(this.props.server_url + \"/api/auth/login\", {\n        method: \"POST\",\n        mode: 'cors',\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header above.\n      }).then(res => {\n        res.json().then(data => {\n          if (data.msg === \"Logged in\") {\n            // this.props.changeUser(data.username);\n            this.props.changeScreen(\"lobby\");\n          } else {\n            alert(data.msg);\n          }\n        });\n      });\n    };\n    this.register = data => {\n      // DONE: write codes to register\n      console.log(data);\n      // let r = JSON.stringify(data);\n      fetch(this.props.server_url + \"/api/auth/signup\", {\n        method: \"POST\",\n        mode: 'cors',\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header above.\n      }).then(res => {\n        res.clone().json().then(data => {\n          alert(data.username);\n        }).catch(() => {\n          res.text().then(textData => {\n            alert(textData);\n          });\n        });\n      });\n    };\n    this.state = {\n      showForm: false,\n      selectedForm: undefined,\n      secret: this.fetchSecret()\n    };\n  }\n  render() {\n    let display = null;\n    if (this.state.showForm) {\n      let fields = [];\n      if (this.state.selectedForm === \"login\") {\n        fields = ['username', 'password', '2FA Token'];\n        console.log();\n        display = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            fields: fields,\n            close: this.closeForm,\n            type: \"login\",\n            submit: this.login\n          }, this.state.selectedForm, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.getImg(this.state.secret),\n            alt: \"QR Code for authentification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this);\n      } else if (this.state.selectedForm === \"register\") {\n        fields = ['username', 'password', 'name'];\n        display = /*#__PURE__*/_jsxDEV(Form, {\n          fields: fields,\n          close: this.closeForm,\n          type: \"register\",\n          submit: this.register\n        }, this.state.selectedForm, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 27\n        }, this);\n      }\n    } else {\n      display = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.setState({\n            showForm: true,\n            selectedForm: \"login\"\n          }),\n          children: \" Login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.setState({\n            showForm: true,\n            selectedForm: \"register\"\n          }),\n          children: \" Register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Welcome to our website! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), display]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Auth;","map":{"version":3,"names":["react","useState","useEffect","Form","Button","jsxDEV","_jsxDEV","qrcode","require","Auth","Component","constructor","props","fetchSecret","res","fetch","server_url","method","mode","credentials","headers","then","response","toSendBack","json","console","log","getImg","data","toDataURL","otpauth_url","err","dat","closeForm","setState","showForm","login","body","JSON","stringify","msg","changeScreen","alert","register","clone","username","catch","text","textData","state","selectedForm","undefined","secret","render","display","fields","children","close","type","submit","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick"],"sources":["C:/Users/bubba/WebstormProjects/110finalproject/front/src/Screens/Auth.js"],"sourcesContent":["import react, {useState, useEffect} from \"react\";\r\nimport Form from \"../Components/form.js\";\r\nimport { Button } from \"@mui/material\";\r\nconst qrcode = require('qrcode');\r\n\r\nclass Auth extends react.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showForm: false,\r\n            selectedForm: undefined,\r\n            secret: this.fetchSecret()\r\n        }\r\n\r\n    }\r\n    fetchSecret = async () =>{\r\n        const res = await fetch(this.props.server_url+\"/api/auth/getSecret\", {\r\n            method: \"GET\",\r\n            mode: 'cors',\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        })\r\n            .then(response => {\r\n                let toSendBack = response.json();\r\n                console.log(toSendBack);\r\n                return(response);\r\n            }\r\n        )\r\n    }\r\n\r\n    getImg = async (data) => {\r\n\r\n        qrcode.toDataURL(data.otpauth_url, function(err,dat){\r\n            console.log(dat);\r\n            return dat;\r\n        })\r\n    }\r\n\r\n    closeForm = () => {\r\n        this.setState({showForm: false});\r\n    }\r\n\r\n    login = (data) => {\r\n        // DONE: write codes to login\r\n        console.log(data);\r\n        fetch(this.props.server_url+\"/api/auth/login\", {\r\n            method: \"POST\",\r\n            mode: 'cors',\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header above.\r\n        }).then((res) => {\r\n            res.json().then((data) => {\r\n                if (data.msg === \"Logged in\"){\r\n                    // this.props.changeUser(data.username);\r\n                    this.props.changeScreen(\"lobby\");\r\n                }else{\r\n                    alert(data.msg);\r\n                }\r\n            });\r\n        });    \r\n    }\r\n\r\n    register = (data) => {\r\n        // DONE: write codes to register\r\n        console.log(data);\r\n        // let r = JSON.stringify(data);\r\n        fetch(this.props.server_url+\"/api/auth/signup\", {\r\n            method: \"POST\",\r\n            mode: 'cors',\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header above.\r\n        }).then((res) => {\r\n            res.clone().json().then((data) => {\r\n                alert(data.username);\r\n            }).catch(()=>{\r\n                res.text().then((textData) => {\r\n                alert(textData);\r\n                })\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    render(){\r\n        let display = null;\r\n        if (this.state.showForm){\r\n            let fields = [];\r\n            if (this.state.selectedForm === \"login\"){\r\n                fields = ['username', 'password', '2FA Token'];\r\n                console.log();\r\n                display =\r\n                    <div><Form fields={fields} close={this.closeForm} type=\"login\" submit={this.login} key={this.state.selectedForm}/>\r\n                    <img src ={this.getImg(this.state.secret)} alt=\"QR Code for authentification\"/></div>;\r\n            }\r\n            else if (this.state.selectedForm === \"register\"){\r\n                fields = [ 'username', 'password', 'name'];\r\n                display = <Form fields={fields} close={this.closeForm} type=\"register\" submit={this.register} key={this.state.selectedForm}/>;\r\n            }   \r\n        }\r\n        else{\r\n            display = <div>\r\n                <Button onClick={() => this.setState({showForm: true, selectedForm:\"login\"})}> Login </Button>\r\n                <Button onClick={() => this.setState({showForm: true, selectedForm: \"register\"})}> Register </Button>\r\n                </div>              ;\r\n        }\r\n        return(\r\n            <div>\r\n                <h1> Welcome to our website! </h1>\r\n                {display}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}